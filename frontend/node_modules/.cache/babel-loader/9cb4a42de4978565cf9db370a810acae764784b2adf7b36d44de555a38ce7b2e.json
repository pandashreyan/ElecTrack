{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\elecbackend\\\\frontend\\\\src\\\\pages\\\\VotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Select, MenuItem, FormControl, InputLabel, Alert, CircularProgress, Card, CardContent, Divider, Grid, Snackbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotesPage() {\n  _s();\n  const [votes, setVotes] = useState([]);\n  const [elections, setElections] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [selectedElection, setSelectedElection] = useState('');\n  const [selectedCandidate, setSelectedCandidate] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [user, setUser] = useState(null);\n  const [activeElections, setActiveElections] = useState([]);\n  const [hasVoted, setHasVoted] = useState({});\n\n  // Get user info from localStorage\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('user') || '{}');\n    setUser(userData);\n  }, []);\n  useEffect(() => {\n    fetchElections();\n    fetchCandidates();\n    fetchVotes();\n  }, []);\n\n  // Filter active elections and check voting status\n  useEffect(() => {\n    const now = new Date();\n    const active = elections.filter(election => {\n      const startDate = new Date(election.startDate);\n      const endDate = new Date(election.endDate);\n      return now >= startDate && now <= endDate;\n    });\n    setActiveElections(active);\n\n    // Check if user has voted in each election\n    const votedStatus = {};\n    votes.forEach(vote => {\n      if (vote.voterId === (user === null || user === void 0 ? void 0 : user.uid)) {\n        votedStatus[vote.electionId] = true;\n      }\n    });\n    setHasVoted(votedStatus);\n  }, [elections, votes, user]);\n  const fetchElections = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get('/elections');\n      setElections(response.data || []);\n    } catch (error) {\n      console.error('Error fetching elections:', error);\n      setError('Failed to load elections. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCandidates = async () => {\n    try {\n      const response = await axios.get('/candidates');\n      setCandidates(response.data || []);\n    } catch (error) {\n      console.error('Error fetching candidates:', error);\n      setError('Failed to load candidates. Please try again.');\n    }\n  };\n  const fetchVotes = async () => {\n    try {\n      const response = await axios.get('/votes');\n      setVotes(response.data || []);\n    } catch (error) {\n      console.error('Error fetching votes:', error);\n    }\n  };\n  const fetchResults = async electionId => {\n    if (!electionId) return;\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get(`/votes/results/${electionId}`);\n      setResults(response.data.results || []);\n    } catch (error) {\n      console.error('Error fetching results:', error);\n      setError('Failed to load election results. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleVote = async () => {\n    if (!selectedElection || !selectedCandidate) {\n      setError('Please select both an election and a candidate');\n      return;\n    }\n    if (!(user !== null && user !== void 0 && user.uid)) {\n      setError('Please log in to vote');\n      return;\n    }\n    if (hasVoted[selectedElection]) {\n      setError('You have already voted in this election');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      await axios.post('/votes', {\n        electionId: selectedElection,\n        candidateId: selectedCandidate,\n        voterId: user.uid\n      });\n      setSuccess('Your vote has been submitted successfully!');\n      setSelectedCandidate('');\n\n      // Update local state\n      setHasVoted({\n        ...hasVoted,\n        [selectedElection]: true\n      });\n\n      // Refresh data\n      fetchResults(selectedElection);\n      fetchVotes();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error submitting vote:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to submit vote. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Voting System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Cast Your Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select Election\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedElection,\n                onChange: e => {\n                  setSelectedElection(e.target.value);\n                  setSelectedCandidate('');\n                },\n                disabled: loading,\n                children: activeElections.map(election => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: election._id,\n                  disabled: hasVoted[election._id],\n                  children: [election.title, \" \", hasVoted[election._id] && '(Voted)']\n                }, election._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), selectedElection && !hasVoted[selectedElection] && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select Candidate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedCandidate,\n                onChange: e => setSelectedCandidate(e.target.value),\n                disabled: loading,\n                children: candidates.map(candidate => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: candidate._id,\n                  children: [candidate.name, \" (\", candidate.party, \")\"]\n                }, candidate._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleVote,\n              disabled: loading || !selectedElection || !selectedCandidate || hasVoted[selectedElection],\n              fullWidth: true,\n              children: loading ? 'Submitting...' : 'Submit Vote'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: selectedElection && results.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Election Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Candidate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Party\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Votes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Percentage\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: results.map(result => /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: result.candidateName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: result.party\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: result.votes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: [result.percentage, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 27\n                    }, this)]\n                  }, result.candidateId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: Boolean(success),\n      autoHideDuration: 3000,\n      onClose: () => setSuccess(''),\n      message: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(VotesPage, \"lTjX1mwRU0iZVXq0JnA2DOe20+8=\");\n_c = VotesPage;\nvar _c;\n$RefreshReg$(_c, \"VotesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Select","MenuItem","FormControl","InputLabel","Alert","CircularProgress","Card","CardContent","Divider","Grid","Snackbar","jsxDEV","_jsxDEV","VotesPage","_s","votes","setVotes","elections","setElections","candidates","setCandidates","selectedElection","setSelectedElection","selectedCandidate","setSelectedCandidate","results","setResults","loading","setLoading","error","setError","success","setSuccess","user","setUser","activeElections","setActiveElections","hasVoted","setHasVoted","userData","JSON","parse","localStorage","getItem","fetchElections","fetchCandidates","fetchVotes","now","Date","active","filter","election","startDate","endDate","votedStatus","forEach","vote","voterId","uid","electionId","response","get","data","console","fetchResults","handleVote","post","candidateId","_error$response","_error$response$data","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","display","justifyContent","my","container","spacing","item","xs","md","fullWidth","value","onChange","e","target","disabled","map","_id","title","candidate","name","party","onClick","length","component","align","result","candidateName","percentage","open","Boolean","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/OneDrive/Desktop/elecbackend/frontend/src/pages/VotesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Alert,\r\n  CircularProgress,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Snackbar\r\n} from '@mui/material';\r\n\r\nexport default function VotesPage() {\r\n  const [votes, setVotes] = useState([]);\r\n  const [elections, setElections] = useState([]);\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [selectedElection, setSelectedElection] = useState('');\r\n  const [selectedCandidate, setSelectedCandidate] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [activeElections, setActiveElections] = useState([]);\r\n  const [hasVoted, setHasVoted] = useState({});\r\n\r\n  // Get user info from localStorage\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem('user') || '{}');\r\n    setUser(userData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchElections();\r\n    fetchCandidates();\r\n    fetchVotes();\r\n  }, []);\r\n\r\n  // Filter active elections and check voting status\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    const active = elections.filter(election => {\r\n      const startDate = new Date(election.startDate);\r\n      const endDate = new Date(election.endDate);\r\n      return now >= startDate && now <= endDate;\r\n    });\r\n    setActiveElections(active);\r\n\r\n    // Check if user has voted in each election\r\n    const votedStatus = {};\r\n    votes.forEach(vote => {\r\n      if (vote.voterId === user?.uid) {\r\n        votedStatus[vote.electionId] = true;\r\n      }\r\n    });\r\n    setHasVoted(votedStatus);\r\n  }, [elections, votes, user]);\r\n\r\n  const fetchElections = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get('/elections');\r\n      setElections(response.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching elections:', error);\r\n      setError('Failed to load elections. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCandidates = async () => {\r\n    try {\r\n      const response = await axios.get('/candidates');\r\n      setCandidates(response.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching candidates:', error);\r\n      setError('Failed to load candidates. Please try again.');\r\n    }\r\n  };\r\n\r\n  const fetchVotes = async () => {\r\n    try {\r\n      const response = await axios.get('/votes');\r\n      setVotes(response.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching votes:', error);\r\n    }\r\n  };\r\n\r\n  const fetchResults = async (electionId) => {\r\n    if (!electionId) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get(`/votes/results/${electionId}`);\r\n      setResults(response.data.results || []);\r\n    } catch (error) {\r\n      console.error('Error fetching results:', error);\r\n      setError('Failed to load election results. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleVote = async () => {\r\n    if (!selectedElection || !selectedCandidate) {\r\n      setError('Please select both an election and a candidate');\r\n      return;\r\n    }\r\n\r\n    if (!user?.uid) {\r\n      setError('Please log in to vote');\r\n      return;\r\n    }\r\n\r\n    if (hasVoted[selectedElection]) {\r\n      setError('You have already voted in this election');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      await axios.post('/votes', {\r\n        electionId: selectedElection,\r\n        candidateId: selectedCandidate,\r\n        voterId: user.uid\r\n      });\r\n      \r\n      setSuccess('Your vote has been submitted successfully!');\r\n      setSelectedCandidate('');\r\n      \r\n      // Update local state\r\n      setHasVoted({ ...hasVoted, [selectedElection]: true });\r\n      \r\n      // Refresh data\r\n      fetchResults(selectedElection);\r\n      fetchVotes();\r\n    } catch (error) {\r\n      console.error('Error submitting vote:', error);\r\n      setError(error.response?.data?.error || 'Failed to submit vote. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>Voting System</Typography>\r\n      \r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n      {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\r\n      \r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ mb: 3 }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>Cast Your Vote</Typography>\r\n              \r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>Select Election</InputLabel>\r\n                <Select\r\n                  value={selectedElection}\r\n                  onChange={(e) => {\r\n                    setSelectedElection(e.target.value);\r\n                    setSelectedCandidate('');\r\n                  }}\r\n                  disabled={loading}\r\n                >\r\n                  {activeElections.map((election) => (\r\n                    <MenuItem \r\n                      key={election._id} \r\n                      value={election._id}\r\n                      disabled={hasVoted[election._id]}\r\n                    >\r\n                      {election.title} {hasVoted[election._id] && '(Voted)'}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              {selectedElection && !hasVoted[selectedElection] && (\r\n                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                  <InputLabel>Select Candidate</InputLabel>\r\n                  <Select\r\n                    value={selectedCandidate}\r\n                    onChange={(e) => setSelectedCandidate(e.target.value)}\r\n                    disabled={loading}\r\n                  >\r\n                    {candidates.map((candidate) => (\r\n                      <MenuItem key={candidate._id} value={candidate._id}>\r\n                        {candidate.name} ({candidate.party})\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleVote}\r\n                disabled={loading || !selectedElection || !selectedCandidate || hasVoted[selectedElection]}\r\n                fullWidth\r\n              >\r\n                {loading ? 'Submitting...' : 'Submit Vote'}\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          {selectedElection && results.length > 0 && (\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>Election Results</Typography>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Candidate</TableCell>\r\n                        <TableCell>Party</TableCell>\r\n                        <TableCell align=\"right\">Votes</TableCell>\r\n                        <TableCell align=\"right\">Percentage</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {results.map((result) => (\r\n                        <TableRow key={result.candidateId}>\r\n                          <TableCell>{result.candidateName}</TableCell>\r\n                          <TableCell>{result.party}</TableCell>\r\n                          <TableCell align=\"right\">{result.votes}</TableCell>\r\n                          <TableCell align=\"right\">{result.percentage}%</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={Boolean(success)}\r\n        autoHideDuration={3000}\r\n        onClose={() => setSuccess('')}\r\n        message={success}\r\n      />\r\n    </Box>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}